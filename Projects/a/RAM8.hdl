// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:    
    // DMux8Way16(in = true, sel[0] = address[0], sel[1] = address[1], sel[2] = address[2], a = reg0, b = reg1, c = reg2, d = reg3, e = reg4, f = reg5, g = reg6, h = reg7);
    DMux8Way(in = load, sel[0] = address[0], sel[1] = address[1], sel[2] = address[2], a = regload0, b = regload1, c = regload2, d = regload3, e = regload4, f = regload5, g = regload6, h = regload7);

    Register(in = in, load = regload0, out = out0);
    Register(in = in, load = regload1, out = out1);
    Register(in = in, load = regload2, out = out2);
    Register(in = in, load = regload3, out = out3);
    Register(in = in, load = regload4, out = out4);
    Register(in = in, load = regload5, out = out5);
    Register(in = in, load = regload6, out = out6);
    Register(in = in, load = regload7, out = out7);

    Mux8Way16(a = out0, b = out1, c = out2, d = out3, e = out4, f = out5, g = out6,h = out7,  sel[0] = address[0], sel[1] = address[1], sel[2] = address[2], out = out);
}